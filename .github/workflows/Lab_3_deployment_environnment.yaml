name: 0. Deployment environnment Lab_3

on:
  workflow_dispatch:

env:
  RESOURCE_GROUP: "RG-Lab3-TF"
  LOCATION: "westeurope"
  CONTAINERAPPS_ENVIRONMENT: "environment-lab-3-tf"
  LOG_ANALYTICS_NAME: "pierrc-workspace-lab-3-tf"
  ACR_NAME: "acrlab3tfil"
  ##################################################################################################################################################################################
  # Nous sommes dans un Workshop !                                                                                                                                                 #
  # Dans les bonnes pratiques, toutes la informations liées à la base de données sont à mettre dans un service pour stocker les secrets (ex: service secrets GitHub, KeyVault, ...)#
  DB_HOST_NAME: "DB-lab-3-tf"                                                                                                                                                     #
  DB_NAME: "rugby_api" # ne pas modifier                                                                                                                                           #
  DB_ADMIN: "tfilipe"                                                                                                                                                               #
  DB_ADMIN_PASSWORD: Password123$                                                                                                                                                  #
  ##################################################################################################################################################################################

jobs:
  Deployment-environnment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du Repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Login Azure
        uses: azure/login@24848bc889cfc0a8313c2b3e378ac0d625b9bc16
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Installation du provider Microsoft.App
        run: |
          az extension add --name containerapp --upgrade
          az provider register --namespace Microsoft.App
          az provider register --namespace Microsoft.OperationalInsights
/*
      - name: Creation du "Resource Group"
        run: |
          az group create \
            --name ${{ env.RESOURCE_GROUP }} \
            --location ${{ env.LOCATION }}
      
      - name: Create "MySQL Server"
        run: |
          az mysql server create \
            --location ${{ env.LOCATION }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.DB_HOST_NAME }} \
            --admin-user ${{ env.DB_ADMIN }} \
            --admin-password ${{ env.DB_ADMIN_PASSWORD }} \
            --sku-name GP_Gen5_2 \
            --ssl-enforcement Disabled
*/
      - name: Create Environnment "Azure Container Apps" 
        run: |
          az monitor log-analytics workspace create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --workspace-name ${{ env.LOG_ANALYTICS_NAME }} \
            --location ${{ env.LOCATION }}
          LOG_ANALYTICS_WORKSPACE_CLIENT_ID=`az monitor log-analytics workspace show --query customerId -g ${{ env.RESOURCE_GROUP }} -n ${{ env.LOG_ANALYTICS_NAME }} --out tsv`
          LOG_ANALYTICS_WORKSPACE_PRIMARY_KEY=`az monitor log-analytics workspace get-shared-keys --query primarySharedKey -g ${{ env.RESOURCE_GROUP }} -n ${{ env.LOG_ANALYTICS_NAME }} --out tsv`
          az containerapp env create \
            --name ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --location ${{ env.LOCATION }} \
            --logs-workspace-id $LOG_ANALYTICS_WORKSPACE_CLIENT_ID \
            --logs-workspace-key $LOG_ANALYTICS_WORKSPACE_PRIMARY_KEY

      - name: Create "Azure Container Registry"
        run: |
          az acr create \
            --name ${{ env.ACR_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --admin-enabled true \
            --sku basic

      - name: Create "MySQL Server" firewall rule
        run: |
          az mysql server firewall-rule create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --server-name ${{ env.DB_HOST_NAME }} \
            --start-ip-address 0.0.0.0 \
            --end-ip-address 255.255.255.255 \
            --name allowip

      - name: Create "Data Base"
        run: |
          az mysql db create \
            --name ${{ env.DB_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --server-name ${{ env.DB_HOST_NAME }}

      - name: Create "Table"
        uses: azure/mysql@093f3af08a63a1d99485a1d93d3771b684625875
        with:
          server-name: ${{ env.DB_HOST_NAME }}.mysql.database.azure.com
          username: ${{ env.DB_ADMIN }}@${{ env.DB_HOST_NAME }}
          password: ${{ env.DB_ADMIN_PASSWORD }}
          database: ${{ env.DB_NAME }}
          sql-file: './Lab_3/App/db/create_tables.sql'
